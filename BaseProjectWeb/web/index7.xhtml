<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://java.sun.com/jsf/core" 
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:ppctu="http://primefaces.prime.com.tr/ui">


    <ui:composition template="templates/template.xhtml">

        <ui:define name="javascripts">
            <script type="text/javascript">
                var notes;
                var note_mode = false;
            
                noteBinding = function (event, pos, item) {
                    duration = Math.floor( eval(pos.xaxis.to) - eval(pos.xaxis.from) );
                    start = Math.floor(  eval(pos.xaxis.from) );
                
                    if (note_mode){
                        $("#note_start").val(start);
                        $("#note_duration").val(duration);
                        $("#notePanel").show('toggle');
                    
                        $("#note_description").val("");
                        $("#note_title").val("");
                    }

                }            
                function getNotesArray(){
                    var mas = [];
                    notes = eval($("#note_span").text());
                    for (var i=0; i &lt; notes.length; i++){
                        mas.push([ notes[i][0] , 0]);
                    }
                    return mas;
                }
            
                function checkNotePoint(x){
                    var b = -1;
                    for (var i = 0; i &lt; notes.length; i++){
                        if (x == notes[i][0]) {
                            b = i; 
                            break;
                        }
                    }
                
                    return b;
                }
            
                function checkboxClick(){
                    if ($("#note_checkbox").is(':checked')){
                        note_mode = true;
                    }else{
                        note_mode = false;
                    }
                }
            
            </script>


            <script>
            
                function getMin(rates){
                    var myMin = rates[0];
                    for (var i=1; i &lt; rates.length; i++){
                        if (myMin  > rates[i]) myMin = rates[i];
                    }
                    return myMin;
                }
            
                function getMax(rates){
                    var myMax = rates[0];
                    for (var i=1; i &lt; rates.length; i++){
                        if (rates[i] > myMax) myMax = rates[i];
                    }
                    return myMax;
                }
            
                function drawScaterogramma(){
                    var mas = [];
                    var rates = getSelectedIntervalsValue(selectionStart,selectionEnd, currentSessionIntervals);
                
                    for (var i = 1; i &lt; rates.length; i++){
                        mas.push([rates[i-1], rates[i]]);
                    }
                    var optionsMini = {
                        series: { shadowSize: 0, color : '#CF3300'},
                        yaxis: { color: '#92d5ea' },
                        xaxis: { mode: "time", color: '#92d5ea'}
                    };
                    var bis = [];
                    var min = getMin(rates);
                    var max = getMax(rates);
                
                    bis.push([500 , 500]);
                    bis.push([1400 , 1400]);
                    myData = [ 
                        {data: mas, lines: {show:false}, points: {show:true}}, 
                        {data: bis, lines: {show:true}}
                    ];
                
                    plot3 = $.plot($("#scaterPlaceholder"),myData);
                }
            
                function drawDiffHistogramm(){
                    var xmin = -500;
                    var xmax = 500;
                    var width = 8;
                    var mas = [];
                    for (var i=0; -i > - Math.floor(1000 / width); i++){
                        mas.push(0);
                    }
                    //                alert(mas);
                    //                diffScaterPlaceholder

                    var rates = getSelectedIntervalsValue(selectionStart,selectionEnd, currentSessionIntervals);
                    for (var i = 1; i &lt; rates.length; i++){
                        var u = Math.floor((rates[i-1] - rates[i] - xmin)/width);
                        mas[Math.floor((rates[i-1] - rates[i] - xmin)/width)]++;
                    }
                    var mas2 = [];
                
                    var imin = 0;
                    for (var i = 0; -i > -mas.length; i++){
                        if (mas[i] > 0 ){
                            imin = i;
                            break;
                        }
                    }
                    var imax = mas.length - 1;
                    for (var i = mas.length; i>0; i--){
                        if (mas[i] > 0 ){
                            imax = i;
                            break;
                        }
                    }
                    //                alert(imin);
                
                    for (var i = imin; -i > - imax; i++){
                        mas2.push([xmin + i * width , mas[i]]);
                    }
                
                    myData = [ 
                        {data: mas2,bars: { show: true, barWidth : width }}
                    ];
                    plot4 = $.plot($("#diffScaterPlaceholder"),myData);
                    //                alert(mas);
                }
            
            
            </script>

            <script type="text/javascript">
                var updateInterval = 5000;
                var CRITICAL_LOADINGS_AMOUNT = 15;
                var plot;
                var intervalMinutes = 5;
                var options = {
                    series: { shadowSize: 0, color : '#CC3300'},
                    yaxis: { color: '#92d5ea' },
                    xaxis: { mode: "time", color: '#92d5ea'},
                    selection: { mode: "x" },
                    grid: { hoverable: true, clickable: true } 
                };
                var optionsMini = {
                    series: { shadowSize: 0, color : '#CF3300'},
                    yaxis: { color: '#92d5ea' },
                    xaxis: { mode: "time", color: '#92d5ea'}
                };
            

                var selectionStart = 0;
                var selectionEnd = 0;
                var interval = 1000*60* intervalMinutes;
                var secondLine = [];
                var currentIntervals = [];
                var currentSessionIntervals = [];
                var myData = [];
                var rendered = false;
            
                var paused = false;
                var pausedButtonRendered = true;
            
                var loadingsAmount = 0;

            
            
                $(function(){
                    $("#placeholder").bind("plotselected", noteBinding);
                    update();
                
                })
            
                function updatePauseButton(){
                
                }
            
                function getRequestString(ints){
                    var s = "";
                    for (var i = 0; i &lt; ints.length - 1; i++){
                        s+=ints[i][1] + ",";
                    }
                    s += ints[ints.length - 1][1];
                    return s;
                }

                function getSelectedIntervals(start , end, intervals){
                    var list = [];
                    for (var i = 0; i &lt; intervals.length; i++){
                        if ((intervals[i][0] &lt;= end ) &amp;&amp; (intervals[i][0] &gt;= start)){
                            list.push( [ intervals[i][0] , intervals[i][1] ]);
                        }
                    }

                    return list;
                }

                function getSelectedIntervalsValue(start , end, intervals){
                    var list = getSelectedIntervals(start,end,intervals);
                    list2 = [];
                    for (var i = 0;  i &lt; list.length; i++){
                        list2.push([list[i][1]]);
                    }
                                
                    return list2;
                }

                function getTheSecondLine(start, end){
                    var mas = [];
                    for (var i=start; i &lt; end; i+=interval){
                        mas.push([ i , 0]);
                    }
                    return mas;
                }
            
                function drawMiniPlot(intervals){
                    plot2 = $.plot($("#miniPlaceholder"),
                    [   {data: intervals, lines: {show:true}} ], optionsMini);
                
                    updateIndicators(intervals);
                    drawScaterogramma();
                    drawDiffHistogramm();
                }
            
                function updateIndicators(intervals){
                    $.ajax({
                        type: "POST",
                        url: "indicators",
                        data: { intervals: getRequestString(intervals) }
                    }).done(function( msg ) {
                        var json = JSON.parse(msg);
                        $("#tp_span").html(json.TP);
                        $("#ic_span").html(json.IC);
                        $("#in_span").html(json.IN);
                        $("#bp_span").html(json.BP);
                        $("#amo_span").html(json.AMoPercents + " %");
                        $("#rrnn_span").html(json.RRNN);
                        $("#sdnn_span").html(json.SDNN);
                        $("#pnn50_span").html(json.PNN50);
                    
                        drawSpectrumChart(json.HFPercents, json.LFPercents, json.VLFPercents, json.ULFPercents );
                    
                    });
                }
            
                function drawSpectrumChart(hf, lf, vlf, ulf){
                    var data = [];
                    data = [{ label: "HF", data: hf }, { label: "LF", data: lf }, { label: "VLF", data: vlf }, { label: "ULF", data: ulf } ];

                    $.plot($("#spectrumPlaceholder"), data, 
                    {
                        series: {
                            pie: { 
                                show: true
                            
                            }
                        },
                        legend: {
                            show: false
                        }
                    });
                }
            
                function updateSelection(start , end){
                    plot.setSelection({ xaxis: { from: start, to: end } });
                    selectionStart = start;
                    selectionEnd = end;
                    //                drawMiniPlot(getSelectedIntervals(selectionStart, selectionEnd, currentSessionIntervals));
                }
            
                function nextSelection(){
                    if ( selectionStart + 1000*60*intervalMinutes &gt; currentSessionIntervals[currentSessionIntervals.length - 1][0]){
                        updateSelection(currentSessionIntervals[0][0], currentSessionIntervals[0][0] + 1000*60*intervalMinutes);
                        drawMiniPlot(getSelectedIntervals(selectionStart,selectionEnd, currentSessionIntervals));
                        return;
                    }
                    updateSelection(selectionStart + 1000*60*intervalMinutes,  selectionEnd + 1000*60*intervalMinutes);
                    drawMiniPlot(getSelectedIntervals(selectionStart,selectionEnd, currentSessionIntervals));
                }
            

            
                myPlotBinding = function (event, pos, item) {
                    plot.unhighlight();
                    pausePlayerButton();
                    if (item) {
                        plot.highlight(item.series, item.datapoint);
                    
                        var t = checkNotePoint(item.datapoint[0]);
                        if (t > -1){
                        
                            updateSelection(item.datapoint[0], item.datapoint[0] + notes[t][1]);
                            $("#select_note_start").val(notes[t][0]);
                            $("#select_note_button").click();
                        }else{
                            updateSelection(item.datapoint[0], item.datapoint[0] + 1000*60*intervalMinutes);
                        }

                    
                        currentIntervals = getSelectedIntervals(selectionStart,selectionEnd, a);
                        drawMiniPlot(currentIntervals);
                    }
                }
            
                myHandler = function(d){
                    a = eval(d);
                
                    currentSessionIntervals = a;
                    secondLine = getTheSecondLine(a[0][0],a[a.length - 1][0]);
                    notesList = getNotesArray();
                    //                    alert(secondLine);
                    myData = [ 
                        {data: notesList, color : 'green', lines: {show:false}, points: { show: true, symbol: "triangle" } }, 
                        {data: a, lines: {show:true}},{data: secondLine, points :{show: true}, lines: {show:false}}];
                
                    if (!rendered){
                        plot = $.plot($("#placeholder"),myData , options); 
                        rendered = true;
                    } else{ 
                        plot.setData(myData);
                        plot.setupGrid();
                        plot.draw();
                    }
                    
                    updateSelection(selectionStart, selectionEnd);
                    
                    $("#placeholder").bind("plotclick", myPlotBinding);
                    d = null;
                    
                }
              
                function processLoadingsAmount(){
                    loadingsAmount = loadingsAmount + 1;
                    $("#loadings").html(loadingsAmount);
                    if (loadingsAmount &gt;= CRITICAL_LOADINGS_AMOUNT){
                        document.location.reload(true);
                    }
                }  
                
                function updatePlayerButton(){
                    if ($("#selectedSessionStatus").html() == "1"){
                        $("#player").css("display","inline-block");
                    } else {
                        $("#player").css("display","none");
                    }
                }
            
                function updatePlayerButtonStatus(){
                    paused = !paused;
                    plot.unhighlight();
                    if (paused) {
                        $("#play").css("display", "inline-block");
                        $("#pause").css("display", "none");
                    } else{
                        $("#play").css("display", "none");
                        $("#pause").css("display", "inline-block");
                    }
                    update();
                }
            
                function pausePlayerButton(){
                    paused = true;
                    $("#play").css("display", "inline-block");
                    $("#pause").css("display", "none");
                }
                
                function update() {
                    updatePlayerButton();
                    processLoadingsAmount();
                    var csId = "#sessionTr" + $("#selectedSessionId").html();
                
                    $("#note_selectedSessionId").val($("#selectedSessionId").html());
                
                    $(".sessionTrClass").css("color","white");
                    $(csId).css("color","yellow");
                    var p = $.get("test?sessionId="+$("#selectedSessionId").html() , myHandler);
                    // если мы смотри текущую загрузку
                    if (($("#selectedSessionStatus").html() == "1" )){
                        if (!paused){
                            setTimeout(update, updateInterval);
                        }
                    } else{
                    
                    }
                }
            </script>
        </ui:define>

        <ui:define name="topbar">
            <div class="navbar navbar-fixed-top">
                <div class="navbar-inner">
                    <div class="container">
                        <ul class="nav">
                            <li>
                                <a href="#{request.contextPath}/faces/index.xhtml">
                                    Dashboard 
                                    <c:if test="#{cardioSessionBean.hasActiveSession(webSession.userId)}" >
                                        <span class="badge badge-success">!</span>
                                    </c:if>
                                </a>
                            </li>
                            <li class="divider-vertical"></li>
                            <li>
                                <a href="#{request.contextPath}/faces/sessions.xhtml">
                                    Сессии
                                </a>
                            </li>
                            <li class="divider-vertical"></li>
                            <li>
                                <a href="#{request.contextPath}/faces/card.xhtml">
                                    Мой профиль
                                </a>
                            </li>
                            <li class="divider-vertical"></li>
                            <li>
                                <a href="#{request.contextPath}/faces/myTrainers.xhtml">
                                    Мои докторы
                                    <c:if test="#{friendsBean.hasNewFriends()}">
                                        <span class="badge badge-warning">#{friendsBean.newFriendsAmount}</span>
                                    </c:if>
                                </a>
                            </li> 

                            <li class="divider-vertical"></li>
                        </ul>

                        <span style="margin-top:8px; display: inline-block; ">
                            Создание метки: <input type="checkbox" id="note_checkbox" onclick="checkboxClick();" />
                        </span>

                        <ul class="nav pull-right">
                            <li>
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">user#{webSession.userId}</a>

                                <!--                                    <a href="#" >-->

                                <!--                                    </a>-->
                                <ul class="dropdown-menu">
                                    <li><a href="#">Profile</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#" >
                                            <h:form>
                                                <h:commandLink actionListener="#{loginBean.logout()}" value="Выход"/>
                                            </h:form>
                                        </a>
                                        <!--                                            <a href="">Logout</a>-->
                                    </li>
                                </ul>
                            </li>
                            <h:form style="position: absolute; right: -50px; top:8px;">
                                <h:commandLink actionListener="#{loginBean.logout()}" value="Выход"/>
                            </h:form>
                        </ul>
                    </div>
                </div>
            </div>
        </ui:define>

        <ui:define name="bodycontent">
            <section id="full-width">
                <div class="well well-w-top">
                    <div class="well-con height" >
                        <div class="top-well">
                            <h1><i class="s-icon s-icon-stat"></i>Analitic</h1>
                        </div>
                        <div class="well-content">
                            <!--                                <div id="placeholder" style="padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: relative; "><canvas class="base" width="1140" height="300"></canvas><canvas class="overlay" width="1140" height="300" style="position: absolute; left: 0px; top: 0px; "></canvas><div class="tickLabels" style="font-size:smaller"><div class="xAxis x1Axis" style="color:#545454"><div class="tickLabel" style="position:absolute;text-align:center;left:-11px;top:282px;width:76px">0</div><div class="tickLabel" style="position:absolute;text-align:center;left:71px;top:282px;width:76px">1</div><div class="tickLabel" style="position:absolute;text-align:center;left:153px;top:282px;width:76px">2</div><div class="tickLabel" style="position:absolute;text-align:center;left:235px;top:282px;width:76px">3</div><div class="tickLabel" style="position:absolute;text-align:center;left:318px;top:282px;width:76px">4</div><div class="tickLabel" style="position:absolute;text-align:center;left:400px;top:282px;width:76px">5</div><div class="tickLabel" style="position:absolute;text-align:center;left:482px;top:282px;width:76px">6</div><div class="tickLabel" style="position:absolute;text-align:center;left:564px;top:282px;width:76px">7</div><div class="tickLabel" style="position:absolute;text-align:center;left:646px;top:282px;width:76px">8</div><div class="tickLabel" style="position:absolute;text-align:center;left:728px;top:282px;width:76px">9</div><div class="tickLabel" style="position:absolute;text-align:center;left:810px;top:282px;width:76px">10</div><div class="tickLabel" style="position:absolute;text-align:center;left:893px;top:282px;width:76px">11</div><div class="tickLabel" style="position:absolute;text-align:center;left:975px;top:282px;width:76px">12</div><div class="tickLabel" style="position:absolute;text-align:center;left:1057px;top:282px;width:76px">13</div></div><div class="yAxis y1Axis" style="color:#545454"><div class="tickLabel" style="position:absolute;text-align:right;top:243px;right:1120px;width:20px">-1.0</div><div class="tickLabel" style="position:absolute;text-align:right;top:187px;right:1120px;width:20px">-0.5</div><div class="tickLabel" style="position:absolute;text-align:right;top:131px;right:1120px;width:20px">0.0</div><div class="tickLabel" style="position:absolute;text-align:right;top:74px;right:1120px;width:20px">0.5</div><div class="tickLabel" style="position:absolute;text-align:right;top:18px;right:1120px;width:20px">1.0</div></div></div></div>-->
                            <div id="placeholder" style="width: 100%;
                                 height: 300px; background-color: #333; margin: 0 auto; margin-bottom: 18px;"></div>

                            <div class="statistics-items">
                                <span style="color:#A5AAB0; font-size: 16px;" class="span8"> Выберите интервал для анализа (нажмите на красную точку)</span>
                                <span style="text-align: right;" class="span3">
                                    <span id="player" style="cursor: pointer;">
                                        <img src="./images/play.ico" style="width: 22px; display: none;" onclick="updatePlayerButtonStatus();" id="play" />
                                        <img src="./images/pause.ico" style="width: 22px; display: inline-block ;" onclick="updatePlayerButtonStatus();" id="pause" />
                                    </span>
                                </span>

                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section id="half-width-box">
                <div class="row">
                    <div class="span3">
                        <div class="well well-w-top">
                            <div class="well-con height" style="overflow-y: auto; max-height: 520px;">
                                <div class="top-well">
                                    <h1><i class="s-icon s-icon-posts"></i>Мои сессии</h1>
                                </div>
                                <div class="well-content">
                                    <table class="table table-striped pull-left">
                                        <thead>
                                            <tr>
                                                <!--                                                    <th>ID</th>-->
                                                <th>Start date</th>
                                                <!--                                                    <th>Rates amount</th>-->
                                                <th>Duration</th>
                                                <th>Status</th>
                                                <th></th>
                                            </tr></thead>
                                        <tbody>
                                            <c:forEach var="cs" items="#{cardioSessionBean.userCardioSessions}">
                                                <tr id="sessionTr#{cs.id}" class="sessionTrClass" title="#{cs.description}">
                                                    <td>
                                                        <h:outputText value="#{cs.startDate}">
                                                            <f:convertDateTime timeZone="GMT+4" pattern="dd.MM.YYYY в HH.mm" />
                                                        </h:outputText>
                                                    </td>


                                                    <td>#{cardioSessionBean.prettyDurationBySessionId(cs.id)}</td>   

                                                    <td>
                                                        <c:if test="#{cs.status == 1}" >
                                                            <span class="price">Current</span>
                                                        </c:if>
                                                        <c:if test="#{cs.status == 0}" >
                                                            <span class="minus-percent">Old</span>
                                                        </c:if>
                                                    </td>   
                                                    <td class="align-right">
                                                        <a href="#">
                                                            <h:form style="display: inline-block;">
                                                                <ppctu:commandLink update="callbackSpan" oncomplete="update();" process="@this"   actionListener="#{cardioSessionBean.changeSelectedSession(cs.id)}">
                                                                    View
                                                                </ppctu:commandLink>
                                                                <a target="_blank" href="#{request.contextPath}/faces/charts.xhtml?id=#{cs.id}">
                                                                    More
                                                                </a>
                                                            </h:form>
                                                        </a>
                                                        <!--                                                            | 
                                                                                                                    <a href="#">Delete</a>-->
                                                    </td>
                                                </tr>
                                            </c:forEach>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span9">
                        <div class="well well-w-top">
                            <div class="well-con height">
                                <div class="top-well">
                                    <h1>Показатели | <a href="javascript: void();" onclick=" nextSelection();"> next 5 min. interval</a></h1>
                                </div>
                                <div id="miniPlaceholder" style="display: block; width: 100%; height:200px;">

                                </div>
                                <span class="span4 well-con well">
                                    <div class="top-well">
                                        <h1>Спектральный анализ</h1>
                                    </div>
                                    <div id="spectrumPlaceholder" style="width: 100%; height: 150px;">

                                    </div>

                                    <span class="stat-title">TP (Общая мощность спектра): 
                                        <span class="stat-num plus-percent" id="tp_span"></span>

                                    </span>
                                    <span class="stat-title">ИЦ(Индекс централизации):
                                        <span class="stat-num plus-percent" id="ic_span"></span>
                                    </span>
                                </span>

                                <span class="span3 well-con well">
                                    <div class="top-well">
                                        <h1>Вариационная пульсометрия</h1>
                                    </div>

                                    <span class="stat-title">ИН (Индекс напряжения): 
                                        <span class="stat-num plus-percent" id="in_span"></span>
                                    </span>

                                    <span class="stat-title">ВР (Вариационный размах):
                                        <span class="stat-num plus-percent" id="bp_span"></span>
                                    </span>

                                    <span class="stat-title">AMo (Ампитуда моды):
                                        <span class="stat-num plus-percent" id="amo_span"></span>
                                    </span>

                                    <br/>

                                    <div class="top-well">
                                        <h1>Статистический анализ</h1>
                                    </div>

                                    <span class="stat-title">RRNN (Среднее значение): 
                                        <span class="stat-num plus-percent" id="rrnn_span"></span>
                                    </span>

                                    <span class="stat-title">SDNN (средн. квадр. откл.):
                                        <span class="stat-num plus-percent" id="sdnn_span"></span>
                                    </span>

                                </span>

                                <span class="span4 well-con well">
                                    <div class="top-well">
                                        <h1>Скатерограмма</h1>
                                    </div>
                                    <br/>
                                    <div id="scaterPlaceholder" style="width: 370px; height: 370px;">

                                    </div>
                                </span>



                                <span class="span3 well-con well">
                                    <div class="top-well">
                                        <h1>Временной анализ</h1>
                                    </div>

                                    <span class="stat-title">PNN50: 
                                        <span class="stat-num plus-percent" id="pnn50_span"></span>
                                    </span>
                                </span>

                                <span class="span4 well-con well">
                                    <div class="top-well">
                                        <h1>Дифференциальная гистограмма</h1>
                                    </div>
                                    <br/>
                                    <div id="diffScaterPlaceholder" style="width: 370px; height: 370px;">
                                        <span onclick="drawDiffHistogramm();"> diff </span>
                                    </div>
                                </span>







                            </div>
                        </div>


                    </div>
                </div>
            </section>
        </ui:define>

        <ui:define name="additional">
            <h:panelGroup id="callbackSpan" style="display: none;" >
                <span id="note_span">#{noteBean.jsStartPointsArray(cardioSessionBean.selectedCardioSessionId)}</span>
                <span id="selectedSessionId">#{cardioSessionBean.selectedCardioSessionId}</span>
                <span id="selectedSessionStatus">#{cardioSessionBean.statusBySessionId(cardioSessionBean.selectedCardioSessionId)}</span>
            </h:panelGroup>

            <h:panelGroup id="notePanel" style="display: none; padding: 10px; border-style: solid; border-color: grey; border-width: 1px; border-radius: 10px; width: 40%; left: 30%; position: fixed; background-color: #1C1D1F;  top: 100px;">
                <h3>Создание метки</h3>
                <br/>

                <h:form prependId="false" >
                    <!--                start: -->
                    <h:inputHidden id="note_start" value="#{noteBean.start}" /> 
                    <!--                duration: -->
                    <h:inputHidden id="note_duration" value="#{noteBean.duration}"  /> 

                    <h2 style="text-align: center;">Title</h2>

                    <h:inputText id="note_title" value="#{noteBean.title}" style="width: 80%; margin-left: 10%;" /> <br/>
                    <h2 style="text-align: center;">Description</h2>
                    <h:inputTextarea id="note_description" value="#{noteBean.description}" style="width: 80%; margin-left: 10%;" />

                    <h:inputHidden id="note_selectedSessionId" value="#{noteBean.selectedSessionId}" />
                    <br/><br/>
                    <div style="text-align: right;">
                        <h:commandButton actionListener="#{noteBean.createNote()}" value="create! " styleClass="btn btn-success" />
                    </div>
                </h:form>
                <div style="text-align:  right;">
                    <a onclick="$('#notePanel').hide('toggle');" href="javascript: void()" >Close</a>
                </div>
            </h:panelGroup>

            <h:panelGroup id="viewNotePanel">
                <h:form prependId="false">
                    <h:inputHidden id="select_note_start" value="#{noteBean.selectedNoteStart}" />
                    <h:commandButton id="select_note_button"  style="display: none;" actionListener="#{noteBean.initSelectedNote}" >
                        <f:ajax execute="@form" render=":viewNotePanel :noteViewPanel :strange_form" onevent="function(data){if (data.status == 'success') { $('#noteViewPanel').show('toggle'); $('#notePanel').hide('toggle');  } }" />
                    </h:commandButton>
                </h:form>
            </h:panelGroup>



            <h:panelGroup id="noteViewPanel" style="display: none; padding: 10px; border-style: solid; border-color: grey; border-width: 1px; border-radius: 10px; width: 40%; left: 30%; position: fixed; background-color: #1C1D1F;  top: 100px;">
                <h:form prependId="false" id="strange_form" >
                    <h2 style="text-align: center; font-family: 'Open Sans', sans-serif;
                        color: #A5AAB0;">Title</h2>

                    <h:inputText  value="#{noteBean.selectedNote.title}" style="width: 80%; margin-left: 10%;" /> <br/>
                    <h2 style="text-align: center; font-family: 'Open Sans', sans-serif;
                        color: #A5AAB0;">Description</h2>
                    <h:inputTextarea  value="#{noteBean.selectedNote.description}" style="width: 80%; margin-left: 10%;" />

                    <div style="text-align: right;">
                        <h:commandButton actionListener="#{noteBean.deleteSelectedNote}" value="delete! " styleClass="btn btn-danger"/>

                    </div>
                </h:form>
                <div style="text-align:  right;">
                    <a onclick="$('#noteViewPanel').hide('toggle');" href="javascript: void()" >Close</a>
                </div>
            </h:panelGroup>
        </ui:define>

    </ui:composition>

</html>
